#BlueJ class context
comment0.target=Interpreter
comment0.text=\r\n\r\n\ @author\ hajicko\r\n
comment1.params=inFileDirectory
comment1.target=java.lang.String[]\ loadFile(java.lang.String)
comment10.params=inCodeLines
comment10.target=void\ saveCodeLines(java.lang.String[])
comment11.params=inCodeLine
comment11.target=void\ addCodeLine(java.lang.String)
comment12.params=
comment12.target=int\ ReformatCodeLines()
comment13.params=
comment13.target=void\ listCode()
comment14.params=inStr
comment14.target=int\ stringType(java.lang.String)
comment15.params=inString\ inChar
comment15.target=java.lang.String[]\ SplitByChar(java.lang.String,\ char)
comment16.params=inString\ inChar\ inExclusionChar
comment16.target=java.lang.String[]\ SplitByChar(java.lang.String,\ char,\ char)
comment17.params=inString\ inChar
comment17.target=int\ CharacterCheck(java.lang.String,\ char)
comment18.params=inString\ inChar\ inExclusionChar
comment18.target=int\ CharacterCheck(java.lang.String,\ char,\ char)
comment19.params=inVarName
comment19.target=boolean\ isValidVariableName(java.lang.String)
comment2.params=inFileDirectory
comment2.target=int\ findFileLineCount(java.lang.String)
comment20.params=inVarName
comment20.target=int\ isValidOperator(java.lang.String)
comment3.params=
comment3.target=void\ runCode()
comment4.params=inCodeLine
comment4.target=void\ runCodeFunction(java.lang.String)
comment5.params=inLine
comment5.target=void\ statementSet(java.lang.String)
comment6.params=inLine\ operationType
comment6.target=void\ statementAddOrSubtract(java.lang.String,\ char)
comment7.params=inLine\ operationType
comment7.target=void\ statementPrinting(java.lang.String,\ char)
comment8.params=inLine\ operationType
comment8.target=void\ statementMultOrDiv(java.lang.String,\ char)
comment9.params=inLine\ operationType
comment9.target=void\ statementConitional(java.lang.String,\ char)
numComments=21
