class Player {
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  boolean [] Keys;
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  void Setup() {
    
    Keys = new boolean[5];
    
  }
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  void Draw() {
    
    PlayerDraw();
    KeyMovement();
    
  }
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  void KeyPressed() {
    switch (key) {   
      case ' ' : 
        Keys[0] = true;
        break;
      case 'w' : 
        Keys[1] = true;
        break;
      case 'a' : 
        Keys[2] = true;
        break;
      case 's' :
        Keys[3] = true;
        break;
      case 'd' :
        Keys[4] = true;
        break;
    }
  }
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  void KeyReleased() {
    switch (key) {   
      case ' ' : 
        Keys[0] = false;
        break;
      case 'w' : 
        Keys[1] = false;
        break;
      case 'a' : 
        Keys[2] = false;
        break;
      case 's' :
        Keys[3] = false;
        break;
      case 'd' :
        Keys[4] = false;
        break;
    }
  }
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  void KeyMovement() {
    
    float MovementSpeed = random(20);
    float BoostBarDeminishing = 1;
    
    if (Keys[0]) {
      if (BoostBar >= 0 + BoostBarDeminishing) {
        MovementSpeed *= 3;
        BoostBar -= BoostBarDeminishing;
      }
    }
    if (Keys[1] && PlayY + PlayD/2 >= 0 + MovementSpeed) {
      PlayY -= MovementSpeed;
    } else if (Keys[1]) {
      PlayY = 0 - PlayD/2;
    }
    if (Keys[2] && PlayX + PlayD/2 >= 0 + MovementSpeed) {
      PlayX -= MovementSpeed;
    } else  if (Keys[2]) {
      PlayX = 0 - PlayD/2;
    }
    if (Keys[3] && PlayY + PlayD/2 <= height - MovementSpeed) {
      PlayY += MovementSpeed;
    } else  if (Keys[3]) {
      PlayY = height - PlayD/2;
    }
    if (Keys[4] && PlayX + PlayD/2 <= width - MovementSpeed) {
      PlayX += MovementSpeed;
    } else  if (Keys[4]) {
      PlayX = width - PlayD/2;
    }
    
  }
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  void PlayerDraw() {
    
    EllipseFunction(PlayX, PlayY, PlayD, PlayD, 5, color(0, 0), color(255));
    
  }
  
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
}//end of class Player
